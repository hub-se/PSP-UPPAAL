<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC "-//Uppaal Team//DTD Flat System 1.1//EN" "flat-1_1.dtd">
<nta>
	<declaration>// Place global declarations here.
broadcast chan Q_reached, P_reached, P_left;
bool P_holds;
int t1;</declaration>
	<template>
		<name x="5" y="5">Recurrence_State_After_Timed</name>
		<declaration>// Place local declarations here.
clock c;</declaration>
		<location id="id0" x="-909" y="-348">
			<committed/>
		</location>
		<location id="id1" x="-1036" y="-348">
		</location>
		<location id="id2" x="-561" y="-459">
			<name x="-571" y="-493">ERROR</name>
		</location>
		<location id="id3" x="-561" y="-348">
		</location>
		<location id="id4" x="-739" y="-348">
			<label kind="invariant" x="-790" y="-374">c &lt;= t1</label>
		</location>
		<init ref="id1"/>
		<transition>
			<source ref="id1"/>
			<target ref="id0"/>
			<label kind="synchronisation" x="-1011" y="-365">Q_reached?</label>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id4"/>
			<label kind="guard" x="-892" y="-365">P_holds == 0</label>
			<label kind="assignment" x="-892" y="-348">c = 0</label>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id3"/>
			<label kind="guard" x="-892" y="-263">P_holds == 1</label>
			<nail x="-909" y="-246"/>
			<nail x="-535" y="-246"/>
			<nail x="-535" y="-331"/>
		</transition>
		<transition>
			<source ref="id4"/>
			<target ref="id2"/>
			<label kind="guard" x="-705" y="-476">c &gt;= t1</label>
			<nail x="-739" y="-459"/>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id4"/>
			<label kind="synchronisation" x="-714" y="-323">P_left?</label>
			<label kind="assignment" x="-714" y="-306">c = 0</label>
			<nail x="-561" y="-306"/>
			<nail x="-739" y="-306"/>
		</transition>
		<transition>
			<source ref="id4"/>
			<target ref="id3"/>
			<label kind="synchronisation" x="-705" y="-365">P_reached?</label>
		</transition>
	</template>
	<system>// Place template instantiations here.
Observer = Recurrence_State_After_Timed();
// List one or more processes to be composed into a system.
system Observer;
    </system>
	<queries>
		<query>
			<formula>A[] not Observer.ERROR
			</formula>
			<comment>
			</comment>
		</query>
	</queries>
</nta>
