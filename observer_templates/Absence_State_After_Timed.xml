<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC "-//Uppaal Team//DTD Flat System 1.1//EN" "flat-1_1.dtd">
<nta>
	<declaration>// Place global declarations here.
broadcast chan Q_reached, P_reached;
bool Q_holds, P_holds;
int t1, t2;</declaration>
	<template>
		<name x="5" y="5">Absence_State_After_Timed</name>
		<declaration>// Place local declarations here.
clock c;</declaration>
		<location id="id0" x="-51" y="119">
		</location>
		<location id="id1" x="119" y="42">
			<name x="136" y="34">ERROR</name>
		</location>
		<location id="id2" x="-323" y="93">
		</location>
		<location id="id3" x="-204" y="42">
			<name x="-214" y="8">SCOPEOPEN</name>
		</location>
		<location id="id4" x="-365" y="42">
			<name x="-375" y="8">INIT</name>
			<committed/>
		</location>
		<init ref="id4"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="76" y="85">c &gt;= t1 and c &lt;= t2</label>
			<label kind="synchronisation" x="51" y="102">P_reached?</label>
			<nail x="25" y="119"/>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id0"/>
			<label kind="guard" x="-161" y="68">c == t1 and P_holds == 0</label>
			<nail x="-136" y="119"/>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id1"/>
			<label kind="guard" x="-110" y="25">c == t1 and P_holds == 1</label>
		</transition>
		<transition>
			<source ref="id4"/>
			<target ref="id3"/>
			<label kind="guard" x="-331" y="8">Q_holds == 1</label>
			<label kind="assignment" x="-306" y="25">c = 0</label>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="synchronisation" x="-289" y="93">Q_reached?</label>
			<label kind="assignment" x="-272" y="110">c = 0</label>
			<nail x="-229" y="93"/>
		</transition>
		<transition>
			<source ref="id4"/>
			<target ref="id2"/>
			<label kind="guard" x="-467" y="59">Q_holds == 0</label>
			<nail x="-365" y="93"/>
		</transition>
	</template>
	<system>// Place template instantiations here.
Observer = Absence_State_After_Timed();
// List one or more processes to be composed into a system.
system Observer;
    </system>
	<queries>
		<query>
			<formula>A[] not Observer.ERROR
			</formula>
			<comment>
			</comment>
		</query>
	</queries>
</nta>
