<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'flat-1_1.dtd'>
<nta>
	<declaration>// Place global declarations here.
broadcast chan R_reached, Q_reached, P_reached, S_reached;
bool R_holds;
bool nxtCmt = 0;</declaration>
	<template>
		<name x="5" y="5">Response_State_Until_Untimed</name>
		<declaration>// Place local declarations here.
</declaration>
		<location id="id0" x="-365" y="-178">
			<committed/>
		</location>
		<location id="id1" x="-510" y="-178">
		</location>
		<location id="id2" x="-25" y="-178">
			<name x="-35" y="-212">P_happens</name>
		</location>
		<location id="id3" x="-195" y="-178">
			<name x="-238" y="-212">S_happens</name>
		</location>
		<init ref="id1"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-484" y="-144">R_holds == 1</label>
			<label kind="assignment" x="-475" y="-153">nxtCmt = 0</label>
			<nail x="-382" y="-153"/>
			<nail x="-493" y="-153"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id3"/>
			<label kind="guard" x="-340" y="-195">R_holds == 0</label>
			<label kind="assignment" x="-347" y="-178">nxtCmt = 0</label>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id0"/>
			<label kind="synchronisation" x="-476" y="-195">Q_reached?</label>
			<label kind="assignment" x="-492" y="-178">nxtCmt = 1</label>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id1"/>
			<label kind="synchronisation" x="-408" y="-110">R_reached?</label>
			<nail x="-195" y="-93"/>
			<nail x="-510" y="-93"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="synchronisation" x="-153" y="-110">S_reached?</label>
			<nail x="-119" y="-110"/>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="synchronisation" x="-144" y="-195">P_reached?</label>
		</transition>
	</template>
	<system>// Place template instantiations here.
Observer = Response_State_Until_Untimed();
// List one or more processes to be composed into a system.
system Observer;
    </system>
	<queries>
		<query>
			<formula>Observer.P_happens --&gt; Observer.S_happens
			</formula>
			<comment>
			</comment>
		</query>
	</queries>
</nta>
