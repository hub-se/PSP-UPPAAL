<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'>
<nta>
	<declaration>// Place global declarations here.
bool S_holds;
broadcast chan S_left, P_reached, R_reached;</declaration>
	<template>
		<name x="5" y="5">ResponseInvariance_State_Before_Untimed</name>
		<declaration>// Place local declarations here.</declaration>
		<location id="id0" x="51" y="-178">
		</location>
		<location id="id1" x="-76" y="-127">
		</location>
		<location id="id2" x="221" y="-178">
			<name x="211" y="-212">ERROR</name>
		</location>
		<location id="id3" x="51" y="-280">
		</location>
		<location id="id4" x="-76" y="-221">
			<committed/>
		</location>
		<location id="id5" x="-212" y="-221">
		</location>
		<init ref="id5"/>
		<transition>
			<source ref="id3"/>
			<target ref="id0"/>
			<label kind="synchronisation" x="51" y="-246">S_left?</label>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id2"/>
			<label kind="synchronisation" x="119" y="-195">R_reached?</label>
		</transition>
		<transition>
			<source ref="id4"/>
			<target ref="id0"/>
			<label kind="guard" x="-68" y="-187">S_holds == 0</label>
			<label kind="assignment" x="-59" y="-170">nxtCmt = 0</label>
		</transition>
		<transition>
			<source ref="id5"/>
			<target ref="id1"/>
			<label kind="synchronisation" x="-194" y="-144">R_reached?</label>
			<nail x="-212" y="-127"/>
		</transition>
		<transition>
			<source ref="id4"/>
			<target ref="id3"/>
			<label kind="guard" x="-68" y="-289">S_holds == 1</label>
			<label kind="assignment" x="-85" y="-272">nxtCmt = 0</label>
		</transition>
		<transition>
			<source ref="id5"/>
			<target ref="id4"/>
			<label kind="synchronisation" x="-194" y="-238">P_reached?</label>
			<label kind="assignment" x="-194" y="-221">nxtCmt = 1</label>
		</transition>
	</template>
	<system>// Place template instantiations here.
Process = ResponseInvariance_State_Before_Untimed();
// List one or more processes to be composed into a system.
system Process;
    </system>
	<queries>
		<query>
			<formula>A[] not Observer.Error
			</formula>
			<comment>
			</comment>
		</query>
	</queries>
</nta>
